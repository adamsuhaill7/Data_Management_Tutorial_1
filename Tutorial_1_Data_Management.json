{"paragraphs":[{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750300364794_750308489","id":"20250619-023244_1634852970","dateCreated":"2025-06-19T02:32:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:344","text":"%md\r\n### Let's make sure Spark is working first!\r\nLet's see what version we're working with.","dateUpdated":"2025-06-19T02:34:03+0000","dateFinished":"2025-06-19T02:34:04+0000","dateStarted":"2025-06-19T02:34:03+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Let's make sure Spark is working first!</h3>\n<p>Let's see what version we're working with.</p>\n"}]}},{"text":"sc.version","user":"anonymous","dateUpdated":"2025-06-19T02:34:26+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750300443304_2006837100","id":"20250619-023403_766956983","dateCreated":"2025-06-19T02:34:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1107","dateFinished":"2025-06-19T02:35:28+0000","dateStarted":"2025-06-19T02:34:26+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res0: String = 2.3.0.2.6.5.0-292\n"}]}},{"text":"%pyspark\n\n# Step 1: Load the Iris dataset from HDFS\niris_df = spark.read.csv(\"hdfs:///user/maria_dev/adam_suhail/Iris.csv\", header=True, inferSchema=True)\niris_df.show()","user":"anonymous","dateUpdated":"2025-06-19T03:00:28+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750300947624_633569228","id":"20250619-024227_1123476529","dateCreated":"2025-06-19T02:42:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1259","dateFinished":"2025-06-19T03:00:29+0000","dateStarted":"2025-06-19T03:00:28+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+-------------+------------+-------------+------------+-----------+\n| Id|SepalLengthCm|SepalWidthCm|PetalLengthCm|PetalWidthCm|    Species|\n+---+-------------+------------+-------------+------------+-----------+\n|  1|          5.1|         3.5|          1.4|         0.2|Iris-setosa|\n|  2|          4.9|         3.0|          1.4|         0.2|Iris-setosa|\n|  3|          4.7|         3.2|          1.3|         0.2|Iris-setosa|\n|  4|          4.6|         3.1|          1.5|         0.2|Iris-setosa|\n|  5|          5.0|         3.6|          1.4|         0.2|Iris-setosa|\n|  6|          5.4|         3.9|          1.7|         0.4|Iris-setosa|\n|  7|          4.6|         3.4|          1.4|         0.3|Iris-setosa|\n|  8|          5.0|         3.4|          1.5|         0.2|Iris-setosa|\n|  9|          4.4|         2.9|          1.4|         0.2|Iris-setosa|\n| 10|          4.9|         3.1|          1.5|         0.1|Iris-setosa|\n| 11|          5.4|         3.7|          1.5|         0.2|Iris-setosa|\n| 12|          4.8|         3.4|          1.6|         0.2|Iris-setosa|\n| 13|          4.8|         3.0|          1.4|         0.1|Iris-setosa|\n| 14|          4.3|         3.0|          1.1|         0.1|Iris-setosa|\n| 15|          5.8|         4.0|          1.2|         0.2|Iris-setosa|\n| 16|          5.7|         4.4|          1.5|         0.4|Iris-setosa|\n| 17|          5.4|         3.9|          1.3|         0.4|Iris-setosa|\n| 18|          5.1|         3.5|          1.4|         0.3|Iris-setosa|\n| 19|          5.7|         3.8|          1.7|         0.3|Iris-setosa|\n| 20|          5.1|         3.8|          1.5|         0.3|Iris-setosa|\n+---+-------------+------------+-------------+------------+-----------+\nonly showing top 20 rows\n\n"}]}},{"text":"%pyspark\n\n# Split the dataset into training (80%) and testing (20%)\ntrain_df, test_df = iris_df.randomSplit([0.8, 0.2], seed=42)","user":"anonymous","dateUpdated":"2025-06-19T03:00:31+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750301113884_-749924875","id":"20250619-024513_1634423822","dateCreated":"2025-06-19T02:45:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1342","dateFinished":"2025-06-19T03:00:31+0000","dateStarted":"2025-06-19T03:00:31+0000","results":{"code":"SUCCESS","msg":[]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750301154805_15553581","id":"20250619-024554_1710813485","dateCreated":"2025-06-19T02:45:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1427","text":"%pyspark\n\nfrom pyspark.ml.feature import StringIndexer, VectorAssembler\nfrom pyspark.ml.classification import RandomForestClassifier\nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.tuning import ParamGridBuilder, CrossValidator\nfrom pyspark.ml.evaluation import MulticlassClassificationEvaluator","dateUpdated":"2025-06-19T03:01:10+0000","dateFinished":"2025-06-19T03:01:10+0000","dateStarted":"2025-06-19T03:01:10+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\n\n# Step 4: Index the labels (Species)\nindexer = StringIndexer(inputCol=\"Species\", outputCol=\"label\")\n\n# Step 5: Create the features vector\nassembler = VectorAssembler(inputCols=[\"SepalLengthCm\", \"SepalWidthCm\", \"PetalLengthCm\", \"PetalWidthCm\"], outputCol=\"features\")\n\n# Step 6: Initialize the Random Forest classifier\nrf = RandomForestClassifier(labelCol=\"label\", featuresCol=\"features\")","user":"anonymous","dateUpdated":"2025-06-19T03:01:12+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750301583968_1014991662","id":"20250619-025303_1805051427","dateCreated":"2025-06-19T02:53:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1923","dateFinished":"2025-06-19T03:01:12+0000","dateStarted":"2025-06-19T03:01:12+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\n\n# Step 7: Create the pipeline\npipeline = Pipeline(stages=[indexer, assembler, rf])\n\n# Step 8: Create a parameter grid for tuning\nparamGrid = ParamGridBuilder() \\\n    .addGrid(rf.numTrees, [10, 20]) \\\n    .addGrid(rf.maxDepth, [5, 10]) \\\n    .build()\n\n# Step 9: Set up CrossValidator\ncv = CrossValidator(estimator=pipeline,\n                    estimatorParamMaps=paramGrid,\n                    evaluator=MulticlassClassificationEvaluator(labelCol=\"label\", predictionCol=\"prediction\", metricName=\"accuracy\"),\n                    numFolds=3)","user":"anonymous","dateUpdated":"2025-06-19T03:01:30+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750302048151_-632288067","id":"20250619-030048_135966153","dateCreated":"2025-06-19T03:00:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2249","dateFinished":"2025-06-19T03:01:31+0000","dateStarted":"2025-06-19T03:01:31+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\n\n# Step 10: Fit the model\ncv_model = cv.fit(train_df)\n\n# Step 11: Make predictions on the test set\npredictions = cv_model.transform(test_df)","user":"anonymous","dateUpdated":"2025-06-19T03:01:43+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750302090920_-1661213895","id":"20250619-030130_1863583134","dateCreated":"2025-06-19T03:01:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2323","dateFinished":"2025-06-19T03:02:02+0000","dateStarted":"2025-06-19T03:01:43+0000","results":{"code":"SUCCESS","msg":[]}},{"text":"%pyspark\n\n# Step 12: Evaluate the model using various metrics\nevaluator = MulticlassClassificationEvaluator(labelCol=\"label\", predictionCol=\"prediction\")\n\naccuracy = evaluator.evaluate(predictions, {evaluator.metricName: \"accuracy\"})\nprecision = evaluator.evaluate(predictions, {evaluator.metricName: \"weightedPrecision\"})\nrecall = evaluator.evaluate(predictions, {evaluator.metricName: \"weightedRecall\"})\nf1_score = evaluator.evaluate(predictions, {evaluator.metricName: \"f1\"})\n\nprint(\"Accuracy: {}\".format(accuracy))\nprint(\"Precision: {}\".format(precision))\nprint(\"Recall: {}\".format(recall))\nprint(\"F1 Score: {}\".format(f1_score))","user":"anonymous","dateUpdated":"2025-06-19T03:03:11+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750302103214_1057052409","id":"20250619-030143_1677700233","dateCreated":"2025-06-19T03:01:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2379","dateFinished":"2025-06-19T03:03:13+0000","dateStarted":"2025-06-19T03:03:11+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Accuracy: 0.95\nPrecision: 0.955\nRecall: 0.95\nF1 Score: 0.948538011696\n"}]}},{"text":"%pyspark\n\n# Step 13: Generate predictions\npredictions.select(\"Species\", \"prediction\").show()","user":"anonymous","dateUpdated":"2025-06-19T03:03:29+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750302125736_-595798218","id":"20250619-030205_179338990","dateCreated":"2025-06-19T03:02:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2486","dateFinished":"2025-06-19T03:03:30+0000","dateStarted":"2025-06-19T03:03:30+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------------+----------+\n|        Species|prediction|\n+---------------+----------+\n|    Iris-setosa|       1.0|\n|    Iris-setosa|       1.0|\n|    Iris-setosa|       1.0|\n|    Iris-setosa|       1.0|\n|    Iris-setosa|       1.0|\n|    Iris-setosa|       1.0|\n|Iris-versicolor|       2.0|\n|Iris-versicolor|       2.0|\n|Iris-versicolor|       2.0|\n|Iris-versicolor|       2.0|\n|Iris-versicolor|       2.0|\n|Iris-versicolor|       2.0|\n|Iris-versicolor|       2.0|\n|Iris-versicolor|       2.0|\n|Iris-versicolor|       2.0|\n| Iris-virginica|       0.0|\n| Iris-virginica|       2.0|\n| Iris-virginica|       0.0|\n| Iris-virginica|       0.0|\n| Iris-virginica|       0.0|\n+---------------+----------+\n\n"}]}},{"text":"%pyspark\n\n# Step 14: Compare actual labels with predicted labels\npredictions.select(\"Species\", \"prediction\").groupBy(\"Species\", \"prediction\").count().show()","user":"anonymous","dateUpdated":"2025-06-19T03:03:38+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750302209551_919818000","id":"20250619-030329_1036758337","dateCreated":"2025-06-19T03:03:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2607","dateFinished":"2025-06-19T03:03:42+0000","dateStarted":"2025-06-19T03:03:38+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------------+----------+-----+\n|        Species|prediction|count|\n+---------------+----------+-----+\n| Iris-virginica|       0.0|    4|\n|    Iris-setosa|       1.0|    6|\n|Iris-versicolor|       2.0|    9|\n| Iris-virginica|       2.0|    1|\n+---------------+----------+-----+\n\n"}]}},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2025-06-19T03:03:38+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750302218339_-885423839","id":"20250619-030338_1853061373","dateCreated":"2025-06-19T03:03:38+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2688"}],"name":"Tutorial_1_Data_Management","id":"2KZY8QQJN","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}